"use strict";!function(){function e(e){return new Promise(function(t,n){e.onsuccess=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function t(t,n,o){var r,i=new Promise(function(i,u){e(r=t[n].apply(t,o)).then(i,u)});return i.request=r,i}function n(e,t,n){n.forEach(function(n){Object.defineProperty(e.prototype,n,{get:function(){return this[t][n]},set:function(e){this[t][n]=e}})})}function o(e,n,o,r){r.forEach(function(r){r in o.prototype&&(e.prototype[r]=function(){return t(this[n],r,arguments)})})}function r(e,t,n,o){o.forEach(function(o){o in n.prototype&&(e.prototype[o]=function(){return this[t][o].apply(this[t],arguments)})})}function i(e,n,o,r){r.forEach(function(r){r in o.prototype&&(e.prototype[r]=function(){return e=this[n],(o=t(e,r,arguments)).then(function(e){if(e)return new c(e,o.request)});var e,o})})}function u(e){this._index=e}function c(e,t){this._cursor=e,this._request=t}function s(e){this._store=e}function a(e){this._tx=e,this.complete=new Promise(function(t,n){e.oncomplete=function(){t()},e.onerror=function(){n(e.error)},e.onabort=function(){n(e.error)}})}function p(e,t,n){this._db=e,this.oldVersion=t,this.transaction=new a(n)}function f(e){this._db=e}n(u,"_index",["name","keyPath","multiEntry","unique"]),o(u,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),i(u,"_index",IDBIndex,["openCursor","openKeyCursor"]),n(c,"_cursor",["direction","key","primaryKey","value"]),o(c,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(t){t in IDBCursor.prototype&&(c.prototype[t]=function(){var n=this,o=arguments;return Promise.resolve().then(function(){return n._cursor[t].apply(n._cursor,o),e(n._request).then(function(e){if(e)return new c(e,n._request)})})})}),s.prototype.createIndex=function(){return new u(this._store.createIndex.apply(this._store,arguments))},s.prototype.index=function(){return new u(this._store.index.apply(this._store,arguments))},n(s,"_store",["name","keyPath","indexNames","autoIncrement"]),o(s,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),i(s,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),r(s,"_store",IDBObjectStore,["deleteIndex"]),a.prototype.objectStore=function(){return new s(this._tx.objectStore.apply(this._tx,arguments))},n(a,"_tx",["objectStoreNames","mode"]),r(a,"_tx",IDBTransaction,["abort"]),p.prototype.createObjectStore=function(){return new s(this._db.createObjectStore.apply(this._db,arguments))},n(p,"_db",["name","version","objectStoreNames"]),r(p,"_db",IDBDatabase,["deleteObjectStore","close"]),f.prototype.transaction=function(){return new a(this._db.transaction.apply(this._db,arguments))},n(f,"_db",["name","version","objectStoreNames"]),r(f,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(e){[s,u].forEach(function(t){t.prototype[e.replace("open","iterate")]=function(){var t,n=(t=arguments,Array.prototype.slice.call(t)),o=n[n.length-1],r=this._store||this._index,i=r[e].apply(r,n.slice(0,-1));i.onsuccess=function(){o(i.result)}}})}),[u,s].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,t){var n=this,o=[];return new Promise(function(r){n.iterateCursor(e,function(e){e?(o.push(e.value),void 0===t||o.length!=t?e.continue():r(o)):r(o)})})})});var d={open:function(e,n,o){var r=t(indexedDB,"open",[e,n]),i=r.request;return i.onupgradeneeded=function(e){o&&o(new p(i.result,e.oldVersion,i.transaction))},r.then(function(e){return new f(e)})},delete:function(e){return t(indexedDB,"deleteDatabase",[e])}};"undefined"!=typeof module?(module.exports=d,module.exports.default=module.exports):self.idb=d}();let lastId=0;class DBHelper{static get DATABASE_URL(){const port=1337;return`http://localhost:${port}`}static fetchRestaurants(callback){if(!("indexedDB"in window)){console.log("IndexedDB is not supported on this browser");let xhr=new XMLHttpRequest;xhr.open("GET",`${DBHelper.DATABASE_URL}/restaurants`);xhr.onload=(()=>{if(xhr.status===200){const json=JSON.parse(xhr.responseText);const restaurants=json;callback(null,restaurants)}else{const error=`Request failed. Returned status of ${xhr.status}`;callback(error,null)}});xhr.send();return}idb.open("restaurants",1,function(upgradeDb){upgradeDb.createObjectStore("restaurants",{keyPath:"id"})}).then(function(db){var tx=db.transaction("restaurants","readonly");var dbStore=tx.objectStore("restaurants");dbStore.getAll().then(idbData=>{if(idbData&&idbData.length>0){callback(null,idbData)}else{let xhr=new XMLHttpRequest;xhr.open("GET",`${DBHelper.DATABASE_URL}/restaurants`);xhr.onload=(()=>{if(xhr.status===200){var tx=db.transaction("restaurants","readwrite");var dbStore=tx.objectStore("restaurants");const json=JSON.parse(xhr.responseText);console.log(json);json.forEach(element=>{dbStore.put(element)});dbStore.getAll().then(restaurants=>{callback(null,restaurants)})}else{const error=`Request failed. Returned status of ${xhr.status}`;callback(error,null)}});xhr.send()}})})}static fetchReviews(callback){if(!("indexedDB"in window)){console.log("IndexedDB is not supported on this browser");fetch(`${DBHelper.DATABASE_URL}/reviews`).then(response=>{const reviews=response.json();return reviews}).then(reviews=>{callback(null,reviews)}).catch(error=>{callback(error,null)})}else{idb.open("reviews",1,function(upgradeDb){upgradeDb.createObjectStore("reviews",{keyPath:"id"})}).then(function(db){var tx=db.transaction("reviews","readonly");var dbStore=tx.objectStore("reviews");dbStore.getAll().then(idbData=>{if(idbData&&idbData.length>0){callback(null,idbData)}else{fetch(`${DBHelper.DATABASE_URL}/reviews`).then(response=>{return response.json()}).then(reviews=>{var tx=db.transaction("reviews","readwrite");var dbStore=tx.objectStore("reviews");reviews.forEach(review=>{dbStore.put(review)});dbStore.getAll().then(reviews=>{callback(null,reviews)})}).catch(error=>{callback(error,null)})}})})}}static sendDeferredReviews(){console.log("sending deferred reviews");if("indexedDB"in window){idb.open("deferredReviews",1,function(upgradeDb){upgradeDb.createObjectStore("deferredReviews",{keyPath:"id"})}).then(function(db){var tx=db.transaction("deferredReviews","readwrite");var dbStore=tx.objectStore("deferredReviews");dbStore.getAll().then(idbData=>{if(idbData&&idbData.length>0){idbData.forEach(deferredReview=>{let name=deferredReview.name;let rating=deferredReview.rating;let comments=deferredReview.comments;let restaurant_id=deferredReview.restaurant_id;let data=new FormData;data.append("name",name);data.append("rating",rating);data.append("comments",comments);data.append("restaurant_id",restaurant_id);fetch(`${DBHelper.DATABASE_URL}/reviews`,{method:"POST",body:data}).then(response=>{return response.json()}).then(review=>{if("indexedDB"in window){idb.open("reviews",1,function(upgradeDb_1){upgradeDb_1.createObjectStore("reviews",{keyPath:"id"})}).then(function(db_1){var tx_1=db_1.transaction("reviews","readwrite");var dbStore_1=tx_1.objectStore("reviews");dbStore_1.put(review)})}}).catch(error=>{console.log(error);return})})}});dbStore.clear()})}}static saveReview(event,callback){event.preventDefault();let name=document.getElementById("name").value;let rating=document.getElementById("rating").value;let comments=document.getElementById("comments").value;let restaurant_id=document.getElementById("restaurant_id").value;let data=new FormData;data.append("name",name);data.append("rating",rating);data.append("comments",comments);data.append("restaurant_id",restaurant_id);let updatedAt=new Date;fetch(`${DBHelper.DATABASE_URL}/reviews`,{method:"POST",body:data}).then(response=>{return response.json()}).then(review=>{if("indexedDB"in window){idb.open("reviews",1,function(upgradeDb){upgradeDb.createObjectStore("reviews",{keyPath:"id"})}).then(function(db){var tx=db.transaction("reviews","readwrite");var dbStore=tx.objectStore("reviews");dbStore.put(review);callback(null,review)})}}).catch(()=>{const deferredReview={id:lastId+1,restaurant_id:restaurant_id,name:name,rating:rating,comments:comments,updatedAt:updatedAt,createdAt:updatedAt};lastId=deferredReview.id;console.log("offline DB store");if("indexedDB"in window){idb.open("deferredReviews",1,function(upgradeDb){upgradeDb.createObjectStore("deferredReviews",{keyPath:"id"})}).then(function(db){var tx=db.transaction("deferredReviews","readwrite");var dbStore=tx.objectStore("deferredReviews");dbStore.put(deferredReview);callback(null,deferredReview)})}else{callback("Your browser does not support this cool feature :(",null)}})}static fetchRestaurantById(id,callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const restaurant=restaurants.find(r=>r.id==id);if(restaurant){callback(null,restaurant)}else{callback("Restaurant does not exist",null)}}})}static fetchReviewsByRestaurantId(id,callback){DBHelper.fetchReviews((error,reviews)=>{if(error){callback(error,null)}else{const revs=reviews.filter(r=>r.restaurant_id==id);if(revs){callback(null,revs)}else{callback("Restaurant does not have reviews yet",null)}}})}static fetchRestaurantByCuisine(cuisine,callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const results=restaurants.filter(r=>r.cuisine_type==cuisine);callback(null,results)}})}static fetchRestaurantByNeighborhood(neighborhood,callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const results=restaurants.filter(r=>r.neighborhood==neighborhood);callback(null,results)}})}static fetchRestaurantByCuisineAndNeighborhood(cuisine,neighborhood,callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{let results=restaurants;if(cuisine!="all"){results=results.filter(r=>r.cuisine_type==cuisine)}if(neighborhood!="all"){results=results.filter(r=>r.neighborhood==neighborhood)}callback(null,results)}})}static fetchNeighborhoods(callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const neighborhoods=restaurants.map((v,i)=>restaurants[i].neighborhood);const uniqueNeighborhoods=neighborhoods.filter((v,i)=>neighborhoods.indexOf(v)==i);callback(null,uniqueNeighborhoods)}})}static fetchCuisines(callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const cuisines=restaurants.map((v,i)=>restaurants[i].cuisine_type);const uniqueCuisines=cuisines.filter((v,i)=>cuisines.indexOf(v)==i);callback(null,uniqueCuisines)}})}static urlForRestaurant(restaurant){return`./restaurant.html?id=${restaurant.id}`}static imageUrlForRestaurant(restaurant){return`/img/${restaurant.photograph}.jpg`}static mapMarkerForRestaurant(restaurant,map){const marker=new google.maps.Marker({position:restaurant.latlng,title:restaurant.name,url:DBHelper.urlForRestaurant(restaurant),map:map,animation:google.maps.Animation.DROP});return marker}}let restaurant;let reviews;var map;window.initMap=(()=>{fetchRestaurantFromURL((error,restaurant)=>{if(error){console.error(error)}else{self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:restaurant.latlng,scrollwheel:false});fillBreadcrumb();DBHelper.mapMarkerForRestaurant(self.restaurant,self.map)}})});window.addEventListener("online",()=>{DBHelper.sendDeferredReviews()});fetchRestaurantFromURL=(callback=>{if(self.restaurant){callback(null,self.restaurant);return}const id=getParameterByName("id");if(!id){error="No restaurant id in URL";callback(error,null)}else{DBHelper.fetchRestaurantById(id,(error,restaurant)=>{self.restaurant=restaurant;if(!restaurant){console.error(error);return}fillRestaurantHTML();callback(null,restaurant)})}});fillRestaurantHTML=((restaurant=self.restaurant)=>{const name=document.getElementById("restaurant-name");name.innerHTML=restaurant.name;const address=document.getElementById("restaurant-address");address.innerHTML=restaurant.address;const image=document.getElementById("restaurant-img");image.className="restaurant-img";image.src=DBHelper.imageUrlForRestaurant(restaurant);image.alt=restaurant.name+" Restaurant";const cuisine=document.getElementById("restaurant-cuisine");cuisine.innerHTML=restaurant.cuisine_type;if(restaurant.operating_hours){fillRestaurantHoursHTML()}DBHelper.fetchReviewsByRestaurantId(restaurant.id,(error,reviews)=>{self.reviews=reviews;if(!reviews){console.error(error);return}fillReviewsHTML()})});fillRestaurantHoursHTML=((operatingHours=self.restaurant.operating_hours)=>{const hours=document.getElementById("restaurant-hours");for(let key in operatingHours){const row=document.createElement("tr");const day=document.createElement("td");day.innerHTML=key;row.appendChild(day);const time=document.createElement("td");time.innerHTML=operatingHours[key];row.appendChild(time);hours.appendChild(row)}});fillReviewsHTML=((reviews=self.reviews)=>{console.log(reviews);const container=document.getElementById("reviews-container");const title=document.createElement("h3");title.innerHTML="Reviews";container.appendChild(title);if(!reviews){const noReviews=document.createElement("p");noReviews.innerHTML="No reviews yet!";container.appendChild(noReviews);return}const ul=document.getElementById("reviews-list");reviews.forEach(review=>{ul.appendChild(createReviewHTML(review))});container.appendChild(ul);const h3=document.createElement("h3");h3.innerHTML="Insert your review:";container.appendChild(h3);const form=document.createElement("form");form.method="POST";form.addEventListener("submit",event=>{DBHelper.saveReview(event,(error,review)=>{if(review){reviews.push(review);console.log(reviews);resetReviews(reviews);fillReviewsHTML()}else{console.error(error);return}})});form.action=`${DBHelper.DATABASE_URL}/reviews/`;form.id="add_review_form";const inputRestaurantId=document.createElement("input");inputRestaurantId.type="hidden";inputRestaurantId.name="restaurant_id";inputRestaurantId.id="restaurant_id";inputRestaurantId.value=self.restaurant.id;const labelName=document.createElement("label");labelName.for="name";labelName.innerHTML="Your name:";const inputName=document.createElement("input");inputName.id="name";inputName.name="name";inputName.type="text";inputName.placeholder="Your name";inputName.required="true";const labelRating=document.createElement("label");labelRating.for="rating";labelRating.innerHTML="Rating:";const inputRating=document.createElement("input");inputRating.id="rating";inputRating.name="rating";inputRating.type="number";inputRating.placeholder="Rating from 1 to 5";inputRating.required="true";const labelComments=document.createElement("label");labelComments.for="comments";labelComments.innerHTML="Comments:";const comments=document.createElement("textarea");comments.id="comments";comments.name="comments";comments.placeholder="Your comments here!";comments.required="true";const submit=document.createElement("button");submit.type="submit";submit.value="Add review";submit.innerHTML="Add review";form.appendChild(inputRestaurantId);form.appendChild(labelName);form.appendChild(inputName);form.appendChild(labelRating);form.appendChild(inputRating);form.appendChild(labelComments);form.appendChild(comments);form.appendChild(submit);container.appendChild(form)});resetReviews=(reviews=>{self.reviews=[];const container=document.getElementById("reviews-container");container.innerHTML="";const ul=document.createElement("ul");ul.id="reviews-list";container.appendChild(ul);self.reviews=reviews});createReviewHTML=(review=>{const li=document.createElement("li");const name=document.createElement("p");name.innerHTML=review.name;li.appendChild(name);const date=document.createElement("p");let d=new Date(review.updatedAt);date.innerHTML=d.toDateString();li.appendChild(date);const rating=document.createElement("p");rating.innerHTML=`Rating: ${review.rating}`;li.appendChild(rating);const comments=document.createElement("p");comments.innerHTML=review.comments;li.appendChild(comments);return li});fillBreadcrumb=((restaurant=self.restaurant)=>{const breadcrumb=document.getElementById("breadcrumb");const li=document.createElement("li");li.innerHTML=restaurant.name;li.setAttribute("aria-current","page");breadcrumb.appendChild(li)});getParameterByName=((name,url)=>{if(!url)url=window.location.href;name=name.replace(/[\[\]]/g,"\\$&");const regex=new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),results=regex.exec(url);if(!results)return null;if(!results[2])return"";return decodeURIComponent(results[2].replace(/\+/g," "))});